builtin fn newarr<T>(size: int): [T]
builtin fn sizeof<T>(): int
builtin fn length<T>(arr: [T]): int
builtin fn assert(expr: bool): void

builtin fn operatorMultiplyWrap(a: int, b: int): int
builtin fn operatorAddWrap(a: int, b: int): int
builtin fn operatorSubtractWrap(a: int, b: int): int

builtin fn operatorMultiply(a: int, b: int): int
builtin fn operatorDivide(a: int, b: int): int
builtin fn operatorModulo(a: int, b: int): int
builtin fn operatorAdd(a: int, b: int): int
builtin fn operatorSubtract(a: int, b: int): int

builtin fn operatorMultiply(a: float, b: float): float
builtin fn operatorDivide(a: float, b: float): float
builtin fn operatorModulo(a: float, b: float): float
builtin fn operatorAdd(a: float, b: float): float
builtin fn operatorSubtract(a: float, b: float): float

builtin fn operatorLess(a: int, b: int): bool
builtin fn operatorLessEqual(a: int, b: int): bool
builtin fn operatorGreater(a: int, b: int): bool
builtin fn operatorGreaterEqual(a: int, b: int): bool
builtin fn operatorEqual(a: int, b: int): bool
builtin fn operatorNotEqual(a: int, b: int): bool

builtin fn operatorLess(a: float, b: float): bool
builtin fn operatorLessEqual(a: float, b: float): bool
builtin fn operatorGreater(a: float, b: float): bool
builtin fn operatorGreaterEqual(a: float, b: float): bool
builtin fn operatorEqual(a: float, b: float): bool
builtin fn operatorNotEqual(a: float, b: float): bool

extern fn spawn(f: fn(): void): void
extern fn yield(): void

fn map<T, U>(a: [T], f: fn(T): U): [U]
    var b = newarr(length(a))

    for e, i in a
        b[i] = f(e)

    b

fn filter<T>(a: [T], f: fn(T): bool): [T]
    var b = newarr(length(a))
    var count = 0

    for e in a
        if f(e)
            b[count] = e
            count = count + 1

    var c = newarr(count)

    for _, i in c
        c[i] = b[i]

    c

fn reduce<T, S>(a: [T], f: fn(S, T): S, s: S): S
    var r = s

    for e in a
        r = f(r, e)

    r

fn scan<T, S>(a: [T], f: fn(S, T): S, s: S): [S]
    var r = newarr(length(a) + 1)
    var t = s

    for e, i in a
        r[i] = t
        t = f(t, e)

    r[length(a)] = t

    r
